<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ticket Sale</title>
</head>
<body>
    <h1>Ticket Sale</h1>
    <form id="buyForm">
        <label for="quantity">Quantity:</label>
        <input type="number" id="quantity" min="1" required>
        <button type="submit">Buy Tickets</button>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/web3@1.3.5/dist/web3.min.js"></script>
    <script>
        // Connect to the local Ethereum node
        const web3 = new Web3('http://127.0.0.1:8545');

        // Contract address and ABI
        const contractAddress = '0x576a020003708ACA60D4Fe33074662A70a76074d';
        const contractABI = [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "FundsWithdrawn",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "buyer",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "ticketsBought",
                    "type": "uint256"
                }
            ],
            "name": "TicketPurchased",
            "type": "event"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_quantity",
                    "type": "uint256"
                }
            ],
            "name": "buyTickets",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "withdrawFunds",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_numTickets",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "numTickets",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "ticketPrice",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "ticketsOwned",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }
    ];

        const contract = new web3.eth.Contract(contractABI, contractAddress);

        // Buy tickets
        async function buyTickets() {
            const accounts = await web3.eth.getAccounts();
            const account = accounts[0];
            const quantityToBuy = document.getElementById('quantity').value;
            alert("buying tickets from metamask")
        
            try {
                await contract.methods.buyTickets(quantityToBuy).send({ from: account, value: quantityToBuy });
                alert(`${quantityToBuy} ticket(s) purchased successfully!`);
            } catch (error) {
                console.error('Error purchasing tickets:', error.message);
                alert('Error purchasing tickets. Please check the console for details.');
            }
        }
        
        // Form submission handler
        document.getElementById('buyForm').addEventListener('submit', function(event) {
            event.preventDefault();
            buyTickets();
        });
    </script>
</body>
</html>
