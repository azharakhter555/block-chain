<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="description" content="">
    <meta name="author" content="">

    <title>Ticketify</title>

    <!-- CSS FILES -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@100;200;400;700&display=swap" rel="stylesheet">
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <link href="css/bootstrap-icons.css" rel="stylesheet">
    <link href="css/templatemo-festava-live.css" rel="stylesheet">
   
</head>
<body>
    <!-- Include Header -->
    <% include ./partials/header.ejs %>

    <main>
        <section class="ticket-section section-padding">
            <div class="section-overlay"></div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-12 col-10 mx-auto ">
                        <!-- Tabs -->
                        <ul class="nav nav-tabs site-footer-top-1" id="myTab" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class=" btn custom-btn nav-link active" id="login-tab" data-bs-toggle="tab" data-bs-target="#login" type="button" role="tab" aria-controls="login" aria-selected="true">Buy Ticket with metamask</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class=" btn custom-btn nav-link" id="ticket-forms-tab" data-bs-toggle="tab" data-bs-target="#ticket-forms" type="button" role="tab" aria-controls="ticket-forms" aria-selected="false">Ticket Forms</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="btn custom-btn nav-link" id="payment-tab" data-bs-toggle="tab" data-bs-target="#payment" type="button" role="tab" aria-controls="payment" aria-selected="false">Payment</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="btn custom-btn nav-link" id="review-tab" data-bs-toggle="tab" data-bs-target="#review" type="button" role="tab" aria-controls="review" aria-selected="false">Review Tickets</button>
                            </li>
                            
                        </ul>
                        <!-- Tab panes -->
                        <div class="tab-content" id="myTabContent">
                            <div class="tab-pane fade show active" id="login" role="tabpanel" aria-labelledby="login-tab">
                                <div class="container">
                                    <div class="row justify-content-center">
                                        <div class="col-lg-6 text-center">


                                            <h3>MetaMask Information</h3>
                                            <p id="metamask-status">Loading MetaMask status...</p>
                                            <p id="metamask-error-message"></p>
                                            
                                            <!-- MetaMask login button -->
                                            <button id="login-with-metamask-btn"  onclick="connectMetamask()" class="btn custom-btn">Login with MetaMask</button>
                                        </div>

                                        <div id="contractArea"></div>

                                        <div id="balance-info"></div>
                                        <div>
                            
                                        </div>
                                        <div>ticket transfer</div>
                                        <div>getTicket infor</div>
                                        <div>withdrwa</div>

                                        <button onclick="getContractAccount()"> GET CONTRACT ACCOUNT </button>
                                        <div>
                                            <button onclick="depositContract()">Send ether to the Contract</button><br>
                                            <input type="number" id="depositInput" placeholder="Enter Amount"><br> <br>
                                        </div>



                                        <div class="col-lg-6 text-center">
                                            <div id="blocks-number"></div>
                                            <div id="block-size"></div>
                                            <div id="block-time"></div>
                                            <div id="sepolia-rate-btc"></div>
                                            <div id="sepolia-rate-usd"></div>
                                            <div id="sepolia-rate-cap-usd"></div>
                                           
                                            <!-- Display MetaMask information -->
                                            <h3>To buy upcoming event</h3>
                                            <p id="a">Event Name</p>
                                            <p id="c">Start Date </p>
                                            <p id="f">Timing</p>
                                            <p id="ws">Locations</p>
                                            <p>Payment with MetaMask or Stripe</p>
                                            <p>Google Map</p>
                                        </div>
                                       

                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="ticket-forms" role="tabpanel" aria-labelledby="ticket-forms-tab">
                                <div class="container">
                                    <div class="row">
                                        <div class="col-lg-12 col-10 mx-auto">
                                            <form class="custom-form ticket-form mb-5 mb-lg-0" action="#" method="post" role="form">
                                                <h2 class="text-center mb-4">Get started here</h2>
                    
                                                <div class="ticket-form-body">
                                                    <div class="row">
                                                        <div class="col-lg-6 col-md-6 col-12">
                                                            <input type="text" name="ticket-form-name" id="ticket-form-name"
                                                                class="form-control" placeholder="Full name" required>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-12">
                                                            <input type="email" name="ticket-form-email" id="ticket-form-email"
                                                                pattern="[^ @]*@[^ @]*" class="form-control" placeholder="Email address"
                                                                required>
                                                        </div>
                                                    </div>
                                                    <input type="tel" class="form-control" name="ticket-form-phone"
                                                        placeholder="Ph 085-456-7890" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" required="">
                                                    <h6>Choose Ticket Type</h6>
                                                    <div class="row">
                                                        <div class="col-lg-6 col-md-6 col-12">
                                                            <div class="form-check form-control">
                                                                <input class="form-check-input" type="radio" name="TicketForm"
                                                                    id="flexRadioDefault1">
                                                                <label class="form-check-label" for="flexRadioDefault1">
                                                                    Early bird $120
                                                                </label>
                                                            </div>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-12">
                                                            <div class="form-check form-check-radio form-control">
                                                                <input class="form-check-input" type="radio" name="TicketForm"
                                                                    id="flexRadioDefault2">
                                                                <label class="form-check-label" for="flexRadioDefault2">
                                                                    Standard $240
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <input type="number" name="ticket-form-number" id="ticket-form-number"
                                                        class="form-control" placeholder="Number of Tickets" required>
                                                    <textarea name="ticket-form-message" rows="3" class="form-control"
                                                        id="ticket-form-message" placeholder="Additional Request"></textarea>
                                                    <div class="col-lg-4 col-md-10 col-8 mx-auto">
                                                        <button type="submit" class="form-control">Buy Ticket</button>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="payment" role="tabpanel" aria-labelledby="payment-tab">
                                <!-- Payment options content goes here -->
                            </div>
                            <div class="tab-pane fade" id="review" role="tabpanel" aria-labelledby="review-tab">
                                <!-- Payment options content goes here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>


    <!-- Include Footer -->
    <% include ./partials/footer.ejs %>

    <script src="js/jquery.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery.sticky.js"></script>
    <!-- <script src="js/click-scroll.js"></script> -->
    <script src="js/custom.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script>
    <script>
        let account;
        let contract;
        let web3;

        const connectContract = async () => {
          const ABI=[
          {
              "anonymous": false,
              "inputs": [
                  {
                      "indexed": true,
                      "internalType": "address",
                      "name": "user",
                      "type": "address"
                  },
                  {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                  },
                  {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "numberOfTickets",
                      "type": "uint256"
                  },
                  {
                      "indexed": false,
                      "internalType": "bool",
                      "name": "isPurchase",
                      "type": "bool"
                  }
              ],
              "name": "TicketAction",
              "type": "event"
          },
          {
              "anonymous": false,
              "inputs": [
                  {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                  },
                  {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                  },
                  {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "numberOfTickets",
                      "type": "uint256"
                  }
              ],
              "name": "TicketsTransferred",
              "type": "event"
          },
          {
              "inputs": [
                  {
                      "internalType": "uint256",
                      "name": "numberOfTickets",
                      "type": "uint256"
                  }
              ],
              "name": "buyTickets",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
          },
          {
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
          },
          {
              "inputs": [],
              "name": "getContractAddress",
              "outputs": [
                  {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                  }
              ],
              "stateMutability": "view",
              "type": "function"
          },
          {
              "inputs": [],
              "name": "getContractBalance",
              "outputs": [
                  {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                  }
              ],
              "stateMutability": "view",
              "type": "function"
          },
          {
              "inputs": [
                  {
                      "internalType": "address",
                      "name": "userAddress",
                      "type": "address"
                  }
              ],
              "name": "getTicketInfo",
              "outputs": [
                  {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                  },
                  {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                  }
              ],
              "stateMutability": "view",
              "type": "function"
          },
          {
              "inputs": [],
              "name": "ticketPrice",
              "outputs": [
                  {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                  }
              ],
              "stateMutability": "view",
              "type": "function"
          },
          {
              "inputs": [
                  {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                  }
              ],
              "name": "ticketsOwned",
              "outputs": [
                  {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                  }
              ],
              "stateMutability": "view",
              "type": "function"
          },
          {
              "inputs": [
                  {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                  },
                  {
                      "internalType": "uint256",
                      "name": "numberOfTickets",
                      "type": "uint256"
                  }
              ],
              "name": "transferTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
          },
          {
              "inputs": [
                  {
                      "internalType": "address payable",
                      "name": "_to",
                      "type": "address"
                  },
                  {
                      "internalType": "uint256",
                      "name": "_amount",
                      "type": "uint256"
                  }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
          },
          {
              "inputs": [],
              "name": "withdrawTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
          }
      ];  
        const Address = "0x0F216b8ef81D418828D835197Fe187b4Bb2F412d"; // Taking Address from Remix 
          
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, Address);
            const data = await window.contract.methods.getContractAddress().call();
            document.getElementById("contractArea").innerHTML = "Connected to Contract";
         
        }
        const getContractAccount = async () => {
            const data = await window.contract.methods.getContractAddress().call();
            document.getElementById("contractAccount").innerHTML = `Contract Account: ${data}`;
        }


        // Function to connect to MetaMask
        const connectMetamask = async () => {
            try {
                // Connect to MetaMask
                if (window.ethereum) {
                    web3 = new Web3(window.ethereum);
                    await window.ethereum.enable();
                    const accounts = await web3.eth.getAccounts();
                    account = accounts[0];
                    document.getElementById("metamask-status").innerHTML = `User Account: ${account}`;
                    connectContract()                   

                } else {
                    throw new Error('MetaMask extension not installed or not available.');
                }
            } catch (error) {
                console.error(error);
                document.getElementById("metamask-error-message").innerHTML = 'Error connecting to MetaMask. Please try again later.';
            }
        }
    
       
    </script>
</body>
</html>
